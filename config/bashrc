# ~/.bashrc

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

[[ $DISPLAY ]] && shopt -q -s checkwinsize
shopt -s histappend

STATE_HOME=${XDG_STATE_HOME:-$HOME/.local/state}
mkdir -p $STATE_HOME/bash
HISTFILE=$STATE_HOME/bash/history
HISTCONTROL=ignorespace:erasedups
HISTSIZE=10000000
HISTFILESIZE=10000000
HISTIGNORE='ls:cd ..:cd ../:cd -:pwd:exit'

PROMPT_COMMAND='history -a'
PROMPT_DIRTRIM=2

parse_git_branch() {
  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

export EDITOR=vim
export MANPAGER="less -R --use-color -Dd+r -Du+b"

if command -v nvim &> /dev/null
then
  export EDITOR='nvim'
fi

alias ls='ls --color=auto'
alias grep='grep -I --color=auto --exclude-dir=.git --exclude-dir=.cache --exclude=compile_commands.json'
alias e='$EDITOR'
alias v='$EDITOR'

if command -v sudo &> /dev/null && [[ $EUID -ne 0 ]]
then
  alias mount="sudo mount"
  alias umount="sudo umount"
  alias pacman="sudo pacman"
fi

if [ -n "$SSH_CONNECTION" -a -z "$STY" -a -z "$TMUX" ]; then
  _SSH_HOST="(`echo $SSH_CONNECTION | cut -d ' ' -f 3`) "
  tmux new -A -s ssh
fi

make_prompt() {
  local RESET="\[\e[0m\]"
  local BOLD="\[\e[1m\]"

  local TIME="\[\e[90m\]\t"
  local HOST="\[\e[32m\]$_SSH_HOST"
  local USERCOLOR="\[\e[32m\]"
  if [ "$EUID" -eq 0 ]; then
    USERCOLOR="\[\e[31m\]"
  fi
  local USER="$USERCOLOR\u"
  local DIR="\[\e[34m\]\w"
  local BRANCH="\[\e[31m\]\$(parse_git_branch)"

  PS1="$RESET$TIME $HOST$BOLD$USER$RESET:$DIR$BRANCH$RESET\$ "
}

make_prompt
unset -f make_prompt

[ -r /usr/share/bash-completion/bash_completion ] && . /usr/share/bash-completion/bash_completion
